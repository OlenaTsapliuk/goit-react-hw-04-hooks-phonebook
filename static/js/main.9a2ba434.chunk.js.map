{"version":3,"sources":["Components/Filter/Filter.module.css","App.module.css","Components/Container/Container.module.css","Components/ContactForm/ContactForm.module.css","Components/ContactForm/ContactForm.js","Components/Container/Container.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js","Components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","this","className","s","form","label","input","type","pattern","title","required","onChange","button","Component","Container","children","container","ContactList","contacts","onDeleteContact","list","map","id","item","onClick","shortid","generate","Filter","App","filter","addContact","contact","find","alert","prevState","changeFilter","getFilterContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","localStorage","setItem","JSON","stringify","parse","getItem","filterContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a2ba434.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1yzgS\",\"input\":\"Filter_input__19MZk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__39wA-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__8qQlV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__e2MHL\",\"label\":\"ContactForm_label__qLNEB\",\"input\":\"ContactForm_input__QS1u0\",\"button\":\"ContactForm_button__3nUDs\"};","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={s.form}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  state: PropTypes.object.isRequired,\n};\n\nexport default ContactForm;\n","import s from \"./Container.module.css\";\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import shortid from \"shortid\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={shortid.generate()} className={s.item}>\n          {name}: {number}\n          <button\n            className={s.button}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default ContactList;\n","import PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\nconst Filter = ({ value, onChange }) => (\n  <label className={s.label}>\n    Find contacts by name\n    <input className={s.input} type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\nimport ContactForm from \"./Components/ContactForm\";\nimport Container from \"./Components/Container\";\nimport ContactList from \"./Components/ContactList\";\nimport Filter from \"./Components/Filter\";\nimport shortid from \"shortid\";\nimport s from \"./App.module.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    if (contacts.find((contact) => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getFilterContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  }\n  }\n\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem('contacts'));\n    if (contacts) {\n      this.setState({ contacts: contacts });\n    }\n\n    \n  }\n\n  render() {\n    const { filter } = this.state;\n    const filterContacts = this.getFilterContacts();\n\n    return (\n      <Container>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} state={this.state} />\n        <h2 className={s.title}>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={filterContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3tElo\",\"item\":\"ContactList_item__2krbK\",\"button\":\"ContactList_button__2ncty\"};"],"sourceRoot":""}